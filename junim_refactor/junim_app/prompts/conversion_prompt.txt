
# Prompt aprimorado para conversão Delphi → Java Spring Boot

## CONTEXTO DA MODERNIZAÇÃO
Você está convertendo um sistema Delphi para Java Spring Boot moderno, com foco em preservar funcionalidades reais, regras de negócio e clareza didática.

## INSTRUÇÕES
- Para cada parte do código Delphi:
  - Explique em linguagem natural o propósito da funcionalidade, para quem é destinada e como se encaixa no fluxo do sistema.
  - Relacione a conversão a requisitos e casos de uso do sistema.
  - Comente o código Java gerado explicando decisões de design, regras de negócio e mapeamentos importantes.
  - Sempre que possível, forneça exemplos de uso (ex: como um endpoint será chamado, qual resposta retorna, etc.).
  - Garanta que a estrutura Java siga boas práticas e seja compreensível para quem não conhece Delphi.

## MAPEAMENTOS PRINCIPAIS

### TForm → @RestController
- Eventos de botão → Endpoints REST
- Validações → Bean Validation
- Navegação → Redirecionamentos HTTP

### TDataModule → @Repository + @Service
- Queries → Métodos Repository
- Transações → @Transactional
- Conexões → DataSource

### Classes Business → @Service
- Métodos → Lógica de negócio
- Validações → Regras de negócio
- Cálculos → Operações

## ESTRUTURA JAVA SPRING
```
src/main/java/
├── config/          # Configurações
├── controller/      # REST APIs
├── service/         # Lógica de negócio
├── repository/      # Persistência
├── entity/          # Entidades JPA
├── dto/             # Transferência de dados
└── exception/       # Tratamento de erros
```

## TECNOLOGIAS
- Spring Boot 3.x
- Spring Data JPA
- Spring Web MVC
- Bean Validation
- Banco H2/PostgreSQL

## SAÍDA ESPERADA
Para cada arquivo Delphi:
1. **Análise**: Explique a funcionalidade e seu papel no sistema
2. **Mapeamento**: Detalhe o equivalente Spring e as decisões de design
3. **Código**: Implemente o Java Spring com comentários didáticos
4. **Testes**: Forneça exemplos de cobertura básica
5. **Config**: Liste configurações necessárias
