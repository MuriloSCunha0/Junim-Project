# Prompt para design de APIs REST

## OBJETIVO
Converter operações de formulário Delphi em APIs REST bem estruturadas.

## PADRÕES REST
- **GET**: Consultas e listagens
- **POST**: Criação de recursos
- **PUT**: Atualização completa
- **PATCH**: Atualização parcial  
- **DELETE**: Remoção

## ESTRUTURA CONTROLLER
```java
@RestController
@RequestMapping("/api/resource")
@Validated
public class ResourceController {
    
    @Autowired
    private ResourceService service;
    
    @GetMapping
    public ResponseEntity<List<ResourceDTO>> getAll() {
        return ResponseEntity.ok(service.findAll());
    }
    
    @PostMapping
    public ResponseEntity<ResourceDTO> create(@Valid @RequestBody ResourceDTO dto) {
        ResourceDTO created = service.create(dto);
        return ResponseEntity.status(HttpStatus.CREATED).body(created);
    }
}
```

## DTOs E VALIDAÇÃO
- Classes DTO para entrada/saída
- @Valid para validação automática
- @NotNull, @NotBlank, @Size para regras
- Mapeamento Entity ↔ DTO

## TRATAMENTO DE ERROS
- @ExceptionHandler customizado
- ResponseEntity com HTTP status
- Mensagens padronizadas
- Log de erros

## DOCUMENTAÇÃO
- Javadoc nos métodos
- Preparação para OpenAPI/Swagger
- Exemplos de uso
